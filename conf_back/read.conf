// Akka Configuration
akka.loglevel = "INFO"
akka.remote.netty.tcp.port = 3000
akka.remote.netty.tcp.hostname = 127.0.0.1
akka.cluster.seed-nodes = ["akka.tcp://LSH@127.0.0.1:3000"]
akka.cluster.roles = [compute]
akka.actor.provider = "akka.actor.LocalActorRefProvider"

akka.actor {

   writer-dispatcher {
     executor = "fork-join-executor"

      thread-pool-executor {
        fixed-pool-size = 10
        core-pool-size-min= 10
        core-pool-size-max =10
        max-pool-size-min = 10
        max-pool-size-max = 10
        task-queue-size=-1
      }
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 10
 
        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        parallelism-factor = 3.0
 
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 10
 
        # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
        # like peeking mode which "pop".
        task-peeking-mode = "FIFO"
      }
      throughput=20
   }
   
   default-dispatcher {
      executor = "fork-join-executor"

      thread-pool-executor {
        fixed-pool-size = 8
        core-pool-size-min= 8
        core-pool-size-max =8
        max-pool-size-min = 8
        max-pool-size-max = 8
        task-queue-size=-1
      }

      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 10 
 
        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        parallelism-factor = 3.0
 
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 10
 
        # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
        # like peeking mode which "pop".
        task-peeking-mode = "FIFO"
      }
      throughput=20
   }
}

//btree configuration
cpslab.lsh.btree.instrumentError=false
cpslab.lsh.btree.debugVectorMax=1000
cpslab.lsh.btree.appendDebug=false
cpslab.lsh.btree.debug=false
cpslab.lsh.btree.compareGroupLength=8
cpslab.lsh.btree.lockScale=16
cpslab.lsh.btree.nodeSize=32
cpslab.lsh.btree.compareGroupNum=4
cpslab.lsh.btree.maximumNodeNum=4

//htree configuration 
cpslab.lsh.htree.debug=false

//table configuration
cpslab.mainTable.bufferOverflow=4
cpslab.mainTable.dirNodeSize=128
cpslab.mainTable.bucketBits=28
cpslab.mainTable.numPartitions=4
cpslab.mainTable.chainLength=32

cpslab.lshTable.bufferOverflow=4
cpslab.lshTable.dirNodeSize=128
cpslab.lshTable.bucketBits=28
cpslab.lshTable.chainLength=32
cpslab.lsh.partitionBits=2


cpslab.lsh.benchmark.accuracy.fixRequests=false
cpslab.lsh.benchmark.accuracy.readFromTrainingSet=false
cpslab.lsh.benchmark.accuracy.totalCnt=50

cpslab.lsh.familySize = 32
cpslab.lsh.generateByPulling=false
cpslab.lsh.partitionBitsGenerateMethod=default 

//App Configuration
cpslab.expInstance=10
cpslab.lsh.benchmark.dbtype="partitionedHashMap"
cpslab.lsh.benchmark.readerActorNum=40
cpslab.lsh.benchmark.actorNum=40
cpslab.lsh.benchmark.asyncReadCap=2000
cpslab.lsh.benchmark.syncReadCap=2000
cpslab.lsh.benchmark.ifRunReadTest=false
cpslab.lsh.benchmark.readingThreadNum=10
cpslab.lsh.benchmark.bufferSize=0
cpslab.lsh.benchmark.lshBufferSize=0
cpslab.lsh.benchmark.readBufferSize=0
cpslab.lsh.benchmark.parallelLSH=false
cpslab.lsh.benchmark.cap=10000
cpslab.lsh.benchmark.asyncCap=20000
cpslab.lsh.benchmark.threadNumber=10
cpslab.lsh.k=10
cpslab.lsh.trainingPath=/home/zhunan/code/dataset
cpslab.lsh.testPath=/home/zhunan/code/dataset
cpslab.lsh.benchmark.base=600000
cpslab.lsh.benchmark.replica=1
cpslab.lsh.benchmark.offset=0
cpslab.lsh.ramThreshold=2147483647
cpslab.lsh.workingDirRoot=/Users/nanzhu/code/htree
cpslab.lsh.concurrentCollectionType=Doraemon
cpslab.lsh.deploy.maxNodeNum=1000
cpslab.lsh.initVectorNumber=496502
cpslab.lsh.inputFilePath=/home/zhunan/code/dataset
cpslab.lsh.vectorDim = 9331 
cpslab.lsh.topK = 2
cpslab.lsh.tableNum=10
cpslab.lsh.deploy.client = "/user/client"
cpslab.lsh.generateMethod = default
cpslab.lsh.nodeID = 0
cpslab.lsh.name = angle
cpslab.lsh.family.pstable.mu = 0.0
cpslab.lsh.family.pstable.sigma = 0.02
cpslab.lsh.family.pstable.w = 3

//Configuration for sharding
cpslab.lsh.sharding.systemName = "LSH"
cpslab.lsh.distributedSchema = PLSH
cpslab.lsh.sharding.maxShardNumPerTable = 100
cpslab.lsh.sharding.maxShardDatabaseWorkerNum = 1
cpslab.lsh.sharding.loadBatchingDuration = 0
cpslab.lsh.sharding.maxDatabaseNodeNum = 1
cpslab.lsh.writerActorNum = 10
cpslab.lsh.sharding.loadBatchingDuration = 0
cpslab.lsh.nodeID = 0
